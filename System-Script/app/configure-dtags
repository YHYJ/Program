#!/usr/bin/env bash

: << !
Name: configure-dtags
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2020-04-27 10:38:44

Description: 配置dtags

Attentions:
-

Depends:
- dtags
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program nversion
readonly major_version=0.1.1
readonly minor_version=20230411
readonly rel_version=1

#------------------------- Exit Code Variable
readonly normal=0           # 一切正常
readonly err_file=1         # 文件/路径类错误
readonly err_permission=110 # 权限错误
readonly err_unknown=255    # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于配置dtags"
# path variable
readonly dtags_path="/usr/bin/dtags-activate"

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\033[32m$name\033[0m\033[1m$desc\033[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name [OPTION]"
  echo -e ""
  echo -e "Options:"
  echo -e "     -f, --folder          配置该文件夹的内容"
  echo -e ""
  echo -e "     -h, --help            显示帮助信息"
  echo -e "     -v, --version         显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\033[1m$name\033[0m version (\033[1m$major_version-$minor_version.$rel_version\033[0m)"
}

#------------------------- Feature Function
function askQuestion() {
  while true; do
    read -e -r -p "$1"
    REPLY=${REPLY:-N}
    echo
    if [[ "$REPLY" =~ ^[Yy] ]]; then
      return 0
    elif [[ "$REPLY" =~ ^[Nn] ]]; then
      return 1
    else
      echo -e "应输入 Y/y 或 N/n\n"
    fi
  done
}

function checkUser() {
  if [[ $USER == "$1" ]]; then
    echo -e "\n\033[31m[✘]\033[0m 当前用户是$1，拒绝执行！！！"
    exit $err_permission
  fi
}

function addTags() {
  num=0
  if [[ -d "$target_folder" ]]; then
    for folder in "$target_folder"/*; do
      if [[ -d "$folder" ]]; then
        if [[ -d "$folder/.git" ]]; then
          tag -y "$folder" -t "repo"
        else
          tag=$(basename "$folder" | tr '[:upper:]' '[:lower:]')
          tag -y "$folder" -t "$tag"
        fi
        ((num++))
      elif [[ -f "$folder" ]]; then
        echo -e "$folder是文本文件，忽略."
      else
        echo -e "$folder文件类型未知，忽略."
      fi
      echo -e ""
    done
  else
    echo -e "\n\033[31m$target_folder目录不存在\033[0m"
    exit $err_file
  fi

  echo -e "\033[34m已创建/存在共\033[0m\033[32m$num\033[0m\033[34m个dtags\033[0m"
  exit $normal
}

function main() {
  checkUser "root"

  if [[ -x "$dtags_path" ]]; then
    echo "$tag"
    addTags "$tag"
  else
    echo -e "请先安装dtags"
  fi
}

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "f:t:hv" --longoptions "folder:,tag:,help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  helpInfo
else
  while true; do
    case $1 in
      -f | --folder)
        target_folder=$2
        shift 1
        ;;
      -h | --help)
        helpInfo
        exit $normal
        ;;
      -v | --version)
        versionInfo
        exit $normal
        ;;
      --)
        shift 1
        break
        ;;
      *)
        helpInfo
        exit $err_unknown
        ;;
    esac
    main
  done
fi
