#!/usr/bin/env bash

: << !
Name: usb-manager
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2023-03-22 15:58:15

Description: 使用udisk2控制可移动USB存储设备

Attentions:
-

Depends:
- udisk2
- jq
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program version
readonly major_version=0.0.1
readonly minor_version=20230322
readonly rel_version=1

#------------------------- Exit Code Variable
readonly normal=0           # 一切正常
readonly err_file=1         # 文件/路径类错误
readonly err_param=2        # 参数错误
readonly err_fetch=48       # checkupdate错误
readonly err_permission=110 # 权限错误
readonly err_range=122      # 取值范围错误
readonly err_no_program=127 # 未找到命令
readonly err_ctrl_c=130     # 接收到INT(Ctrl+C)指令
readonly err_unknown=255    # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于控制可移动USB存储设备"

# time variable
readonly time_out=1

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\033[32m$name\033[0m\033[1m$desc\033[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name [OPTION]"
  echo -e ""
  echo -e "Options:"
  echo -e "     -m, --mount       挂载USB存储设备"
  echo -e "     -u, --umount      卸载USB存储设备（仅解除挂载）"
  echo -e "     -r, --remove      弹出USB存储设备（解除挂载并弹出）"
  echo -e ""
  echo -e "     -h, --help        显示帮助信息"
  echo -e "     -v, --version     显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\033[1m$name\033[0m version (\033[1m$major_version-$minor_version.$rel_version\033[0m)"
}

#------------------------- Feature Function
function checkCommand() {
  if ! command -v "$1" &> /dev/null; then
    echo -e "$1 未安装"
    exit $err_no_program
  fi
}

function mountAction() {
  # 罗列可移动USB存储设备的名字(NAME)、类型(TYPE)、是否可卸载(RM)和挂载点(MOUNTPOINT)
  devices=$(lsblk -Jplno NAME,TYPE,RM,MOUNTPOINT)
  # 使用jq查找符合要求的设备
  partnames=$(echo "$devices" | jq -r '.blockdevices[] | select(.type == "part") | select(.rm == true) | select(.mountpoint == null) | .name')

  # 挂载分区
  for partname in $partnames; do
    udisksctl mount --no-user-interaction -b "$partname"
  done
}

function umountAction() {
  # 罗列可移动USB存储设备的名字(NAME)、类型(TYPE)、是否可卸载(RM)和挂载点(MOUNTPOINT)
  devices=$(lsblk -Jplno NAME,TYPE,RM,MOUNTPOINT)
  # 使用jq查找符合要求的设备
  partnames=$(echo "$devices" | jq -r '.blockdevices[] | select(.type == "part") | select(.rm == true) | select(.mountpoint != null) | .name')

  # 卸载分区
  for partname in $partnames; do
    udisksctl unmount --no-user-interaction -b "$partname"
  done
}

function removeAction() {
  # 罗列可移动USB存储设备的名字(NAME)、类型(TYPE)、是否可卸载(RM)和挂载点(MOUNTPOINT)
  devices=$(lsblk -Jplno NAME,TYPE,RM,MOUNTPOINT)
  # 使用jq查找符合要求的设备
  partnames=$(echo "$devices" | jq -r '.blockdevices[] | select(.type == "part") | select(.rm == true) | select(.mountpoint != null) | .name')
  disknames=$(echo "$devices" | jq -r '.blockdevices[] | select(.type == "disk") | select(.rm == true) | .name')

  # 卸载分区
  for partname in $partnames; do
    udisksctl unmount --no-user-interaction -b "$partname"
  done

  # 弹出磁盘
  for diskname in $disknames; do
    udisksctl power-off --no-user-interaction -b "$diskname"
    echo -e "$diskname is safely removed"
  done
}

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "murhv" --longoptions "mount,umount,remove,help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  helpInfo
else
  while true; do
    case $1 in
      -m | --mount)
        checkCommand "udisksctl"
        mountAction
        shift 1
        ;;
      -u | --umount)
        checkCommand "udisksctl"
        umountAction
        shift 1
        ;;
      -r | --remove)
        checkCommand "udisksctl"
        removeAction
        shift 1
        ;;
      -h | --help)
        helpInfo
        shift 1
        ;;
      -v | --version)
        versionInfo
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        helpInfo
        exit $err_unknown
        ;;
    esac
  done
fi
