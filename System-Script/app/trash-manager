#!/usr/bin/env bash

: << !
Name: trash-manager
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2020-05-30 21:00:27

Description: 回收站管理器

Attentions:
- 根据参数确定操作

Depends:
- findutils
- libnotify
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program version
readonly major_version=2.2.1
readonly minor_version=20230316
readonly rel_version=1

#------------------------- Exit Code Variable
readonly normal=0           # 一切正常
readonly err_file=1         # 文件/路径类错误
readonly err_param=2        # 参数错误
readonly err_no_program=127 # 未找到命令

#------------------------- Parameter Variable
# description variable
readonly desc="用于控制回收站"

# path variable
readonly trash_path="$HOME/.local/share/Trash/files"

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\033[32m$name\033[0m\033[1m$desc\033[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name [OPTION]"
  echo -e ""
  echo -e "Options:"
  echo -e "     -e, --empty       清空回收站"
  echo -e "     -l, --list        列出回收站文件"
  echo -e "     -n, --number      回收站文件计数"
  echo -e ""
  echo -e "     -h, --help        显示帮助信息"
  echo -e "     -v, --version     显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\033[1m$name\033[0m version (\033[1m$major_version-$minor_version.$rel_version\033[0m)"
}

#------------------------- Feature Function
function checkPath() {
  if [[ -e "$1" ]]; then
    if [[ ! -d "$1" ]]; then
      echo -e "指定路径$1不是文件夹，已退出"
      exit $err_file
    fi
  else
    mkdir -p "$1"
    echo -e "\n已创建$1\n"
  fi
}

function checkCommand() {
  if command -v "$1" &> /dev/null; then
    return $normal
  else
    return $err_no_program
  fi
}

function number() {
  # count variable
  count=$(find "$trash_path" -maxdepth 1 | wc -l)
  count=$((count - 1))
  #function_body
  if [[ $count != 0 ]]; then
    echo "$count"
  else
    echo ""
  fi
}

function listFile() {
  if checkCommand "notify-send"; then
    notify-send --urgency=normal --icon=trashindicator --app-name='Trash info' "回收站文件" "$(ls -A "$trash_path")"
  else
    echo -e "xdg-open 未安装"
  fi
}

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "elnhv" --longoptions "empty,list,number,help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  helpInfo
else
  while true; do
    case $1 in
      -e | --empty)
        /usr/local/bin/trash-empty_substitute --force
        shift 1
        ;;
      -l | --list)
        checkPath "$trash_path"
        listFile
        shift 1
        ;;
      -n | --number)
        checkPath "$trash_path"
        number
        shift 1
        ;;
      -h | --help)
        helpInfo
        shift 1
        ;;
      -v | --version)
        versionInfo
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        exit $err_param
        ;;
    esac
  done
fi
