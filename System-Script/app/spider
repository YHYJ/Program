#!/usr/bin/env bash

: << !
Name: spider
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2022-10-24 14:48:12

Description: Linux系统信息搜集工具

Attentions: 搜集如下信息
- Package
- Service
- User
- Vim
- Guake
- Virtualenv

Depends:
- coreutils
- diffutils/colordiff
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program nversion
readonly major_version=0.2.3
readonly minor_version=20231013
readonly rel_version=1

#------------------------- Exit Code Variable
readonly err_no_program=127 # 未找到命令
readonly err_unknown=255    # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于搜集Linux系统信息"

# 搜集结果存储路径
readonly storage="$HOME/.cache/SpiderData"

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\x1b[32m$name\x1b[0m\x1b[1m$desc\x1b[0m"
  echo -e "--------------------------------------------------"
  echo -e "\x1b[1;33m搜集结果存储于\x1b[0m: \x1b[34m$storage\x1b[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name [OPTION]"
  echo -e ""
  echo -e "Options:"
  echo -e "     -g, --get [MODULE]    指定搜集的模块"
  echo -e ""
  echo -e "     -h, --help            显示帮助信息"
  echo -e "     -v, --version         显示版本信息"
  echo -e ""
  echo -e "Modules:"
  echo -e "     all                   搜集全部模块"
  echo -e "     app                   搜集特定软件信息"
  echo -e "     env                   搜集开发工具虚拟环境信息"
  echo -e "     package               搜集安装包信息"
  echo -e "     service               搜集服务信息"
  echo -e "     user                  搜集用户信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\x1b[1m$name\x1b[0m version (\x1b[1m$major_version-$minor_version.$rel_version\x1b[0m)"
}

function finish() {
  echo -e "\n\x1b[35m[✔]\x1b[0m 信息搜集完成"
}

#------------------------- Feature Function
function checkPath() {
  if [[ ! -d $1 ]]; then
    mkdir "$1"
  fi
}

function checkCommand() {
  if ! command -v "$1" > /dev/null 2>&1; then
    echo -e "$1 未安装"
    exit $err_no_program
  fi
}

function spiderAppInfo() {
  echo -e "\x1b[1;34mApp\x1b[0m"
  collect-system --name app # App config file
}

function spiderPackageInfo() {
  echo -e "\x1b[1;34mPackage\x1b[0m"
  collect-system --name package # Package List
}

function spiderServiceInfo() {
  echo -e "\x1b[1;34mService\x1b[0m"
  collect-system --name service # Service List
}

function spiderUserInfo() {
  echo -e "\x1b[1;34mUser\x1b[0m"
  collect-system --name user # User List
}

function spiderVirtualenvInfo() {
  echo -e "\x1b[1;34mVirtualenv\x1b[0m"
  py-virtualenv-tool --save # Python Virtualenv
}

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "g:hv" --longoptions "get:,help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  helpInfo
else
  while true; do
    case $1 in
      -g | --get)
        case $2 in
          all)
            checkCommand "collect-system"
            checkCommand "py-virtualenv-tool"
            checkPath "$storage"
            spiderAppInfo
            spiderPackageInfo
            spiderServiceInfo
            spiderUserInfo
            spiderVirtualenvInfo
            finish
            shift 1
            ;;
          app)
            checkCommand "collect-system"
            checkPath "$storage"
            spiderAppInfo
            finish
            shift 1
            ;;
          env)
            checkCommand "py-virtualenv-tool"
            checkPath "$storage"
            spiderVirtualenvInfo
            finish
            shift 1
            ;;
          package)
            checkCommand "collect-system"
            checkPath "$storage"
            spiderPackageInfo
            finish
            shift 1
            ;;
          service)
            checkCommand "collect-system"
            checkPath "$storage"
            spiderServiceInfo
            finish
            shift 1
            ;;
          user)
            checkCommand "collect-system"
            checkPath "$storage"
            spiderUserInfo
            finish
            shift 1
            ;;
          --)
            shift 1
            break
            ;;
          *)
            echo -e "\n\x1b[31m[✘]\x1b[0m 无法搜集该内容"
            ;;
        esac
        shift 1
        ;;
      -h | --help)
        helpInfo
        shift 1
        ;;
      -v | --version)
        versionInfo
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        helpInfo
        exit $err_unknown
        ;;
    esac
  done
fi
