#!/usr/bin/env bash

: << !
Name: get-system-info
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2021-11-17 08:49:08

Description: 查询系统信息

Attentions:
-

Depends:
-
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program version
readonly major_version=0.2.0
readonly minor_version=20230313
readonly rel_version=1

#------------------------- Exit Code Variable
readonly err_unknown=255 # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于查询系统信息"

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\033[32m$name\033[0m\033[1m$desc\033[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name [OPTION]"
  echo -e ""
  echo -e "Options:"
  echo -e "     -k, --kernel      显示内核版本"
  echo -e "     -l, --login       显示最近开机时间"
  echo -e "     -p, --package     显示可用更新"
  echo -e "     -s, --service     显示更新检测状态"
  echo -e "     -t, --time        显示系统启动用时"
  echo -e "     -u, --user        显示当前登录用户"
  echo -e ""
  echo -e "     -h, --help        显示帮助信息"
  echo -e "     -v, --version     显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\033[1m$name\033[0m version (\033[1m$major_version-$minor_version.$rel_version\033[0m)"
}
#------------------------- Feature Function

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "klpstuhv" --longoptions "kernel,login,package,service,time,user,help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  helpInfo
else
  while true; do
    case $1 in
      -k | --kernel)
        notify-send --urgency=normal --icon=distributor-logo-archlinux --app-name='System info' '内核版本' "$(uname -sr)"
        shift 1
        ;;
      -l | --login)
        notify-send --urgency=normal --icon=system-users --app-name='Login info' '最近开机时间' "$(uptime -s)"
        shift 1
        ;;
      -p | --package)
        notify-send --urgency=normal --icon=system-software-update --app-name='Update info' '可用更新' "$(cat /tmp/system-checkupdates.log)"
        shift 1
        ;;
      -s | --service)
        notify-send --urgency=normal --icon=system-software-update --app-name='Update info' '更新检测状态' "$(systemctl is-active system-checkupdates)"
        shift 1
        ;;
      -t | --time)
        notify-send --urgency=normal --icon=distributor-logo-archlinux --app-name='System info' '系统启动用时' "$(systemd-analyze | head -1 | awk '{print $NF}')"
        shift 1
        ;;
      -u | --user)
        notify-send --urgency=normal --icon=system-users --app-name='Login info' '当前登录用户' "$(who -q | sed 's/# //')"
        shift 1
        ;;
      -h | --help)
        helpInfo
        shift 1
        ;;
      -v | --version)
        versionInfo
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        helpInfo
        exit $err_unknown
        ;;
    esac
  done
fi
