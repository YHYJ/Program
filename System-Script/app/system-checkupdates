#!/usr/bin/env bash

: << !
Name: system-checkupdates
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2020-05-31 00:00:00

Description: 检查系统更新

Attentions:
- Polybar插件
- 将更新信息写入tmp文件
- Polybar进程解析tmp文件获取可更新软件包个数并显示
- 可配合service和timer定时获取更新信息
- 可配合alpm-hooks当pacman更新软件包时将tmp文件内容清空

Depends:
- pacman-contrib
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program version
readonly major_version=3.0.3
readonly minor_version=20231013
readonly rel_version=1

#------------------------- Exit Code Variable
readonly normal=0           # 一切正常
readonly err_no_program=127 # 未找到命令
readonly err_unknown=255 # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于检测系统软件包更新"
# path variable
readonly tmp_file="/tmp/$name.log"
readonly check_tool="checkupdates"

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\x1b[32m$name\x1b[0m\x1b[1m$desc\x1b[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name [OPTION]"
  echo -e ""
  echo -e "Options:"
  echo -e "     -c, --check       检测软件包更新"
  echo -e "     -e, --empty       清空tmp文件内容"
  echo -e ""
  echo -e "     -h, --help        显示帮助信息"
  echo -e "     -v, --version     显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\x1b[1m$name\x1b[0m version (\x1b[1m$major_version-$minor_version.$rel_version\x1b[0m)"
}

#------------------------- Feature Function
function checkFile() {
  if [[ ! -f $1 ]]; then
    touch "$1"
  fi
}

function checkCommand() {
  if command -v "$1" > /dev/null 2>&1; then
    return $normal
  else
    return $err_no_program
  fi
}

function checkUpdate() {
  if ! checkCommand "$check_tool"; then
    echo -e "$check_tool 未安装"
    exit $err_no_program
  else
    $check_tool > "$tmp_file"
  fi
}

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "cehv" --longoptions "check,empty,help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  helpInfo
else
  while true; do
    case $1 in
      -c | --check)
        checkFile "$tmp_file"
        checkUpdate
        shift 1
        ;;
      -e | --empty) # 使用'--empty'参数将tmp文件内容清空
        checkFile "$tmp_file"
        : > "$tmp_file"
        shift 1
        ;;
      -h | --help)
        helpInfo
        shift 1
        ;;
      -v | --version)
        versionInfo
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        helpInfo
        exit $err_unknown
        ;;
    esac
  done
fi
