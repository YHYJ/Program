#!/usr/bin/env bash

: << !
Name: manager
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2020-04-27 13:19:32

Description: 安装/更新我的程序到指定路径

Attentions:
- 安装位置：/usr/local/bin

Depends:
- diffutils/colordiff

TODO:
1. 找到替代通过文件通信的方法
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program version
readonly major_version=3.3.5
readonly minor_version=20230427
readonly rel_version=1

#------------------------- Exit Code Variable
readonly err_file=1         # 文件/路径类错误
readonly err_permission=110 # 权限错误
readonly err_unknown=255    # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于安装自定义程序和脚本"

# path variable
readonly source_path="$HOME/Documents/Repos/System/Program/System-Script/app"
readonly target_path="/usr/local/bin"
readonly conf_dir="$HOME/.config/$name"
readonly confile="$conf_dir/$name.conf"
diff_programs=()
# count variable
update_num=0
install_num=0
uninstall_num=0

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\033[32m$name\033[0m\033[1m$desc\033[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name [OPTION]"
  echo -e ""
  echo -e "Options:"
  echo -e "     -c, --check            检查是否有更新"
  echo -e "     -d, --dir <string>     指定需要安装的程序文件的路径（尚未启用）"
  echo -e "     -i, --install          执行程序安装操作"
  echo -e ""
  echo -e "     -h, --help             显示帮助信息"
  echo -e "     -v, --version          显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\033[1m$name\033[0m version (\033[1m$major_version-$minor_version.$rel_version\033[0m)"
}

function notifyInfo() {
  if [[ $update_num -gt 0 ]] && [[ $install_num -gt 0 ]]; then
    echo -e "\n\033[35m[✔]\033[0m $update_num 个程序更新完成, $install_num 个程序安装完成"
  elif [[ $update_num -eq 0 ]] && [[ $install_num -eq 0 ]]; then
    echo -e "\n\033[35m[✔]\033[0m 没有程序更新"
  elif [[ $update_num -gt 0 ]]; then
    echo -e "\n\033[35m[✔]\033[0m $update_num 个程序更新完成"
  elif [[ $install_num -gt 0 ]]; then
    echo -e "\n\033[35m[✔]\033[0m $install_num 个程序安装完成"
  elif [[ $uninstall_num -gt 0 ]]; then
    echo -e "\n\033[35m[✔]\033[0m $install_num 个程序卸载完成"
  fi
}

#------------------------- Feature Function
function checkUser() {
  if [[ $USER == "$1" ]]; then
    echo -e "\n\033[31m[✘]\033[0m 当前用户是$1，拒绝执行"
    exit $err_permission
  fi
}

function checkPath() {
  if [[ -e "$1" ]]; then
    if [[ ! -d "$1" ]]; then
      echo -e "指定路径$1不是文件夹，已退出"
      exit $err_file
    fi
  else
    mkdir -p "$1"
    echo -e "\n已创建$1\n"
  fi
}

function checkUpdate() {
  # list variable
  source_programs=$(ls "$source_path")
  # 检查可更新项，依次将其加入到数组
  for program in $source_programs; do
    if ! diff "$source_path/$program" "$target_path/$program" &> /dev/null; then
      diff_programs[${#diff_programs[@]}]="$program"
    fi
  done
  echo "${diff_programs[@]}" > "$confile"
}

function installOperation() {
  # install/update
  programs=$(cat "$confile")
  readonly programs
  for program in ${programs[*]}; do # 不要理会这个报错，否则就真错了
    if [[ -x $target_path/$program ]]; then
      install -m 0755 "$source_path/$program" "$target_path/$program"
      echo -e "\033[1;34m==>\033[0m 正在更新 \033[32m$program\033[0m"
      update_num=$((update_num + 1))
    else
      install -m 0755 "$source_path/$program" "$target_path/$program"
      echo -e "\033[1;34m==>\033[0m 正在安装 \033[32m$program\033[0m"
      install_num=$((install_num + 1))
    fi
  done

  notifyInfo
}

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "cihv" --longoptions "check,install,help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  helpInfo
else
  while true; do
    checkPath "$source_path"
    checkPath "$conf_dir"
    case $1 in
      -c | --check)
        checkUpdate
        if [[ ${#diff_programs[@]} -gt 0 ]]; then
          if ! diff "$source_path/$name" "$target_path/$name" &> /dev/null; then
            "$source_path/$name" --install
          else
            "$target_path/$name" --install
          fi
        else
          update_num=0
          install_num=0
          notifyInfo
        fi
        shift 1
        ;;
      -i | --install)
        installOperation
        shift 1
        ;;
      -h | --help)
        helpInfo
        shift 1
        ;;
      -v | --version)
        versionInfo
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        helpInfo
        exit $err_unknown
        ;;
    esac
  done
fi
