#!/usr/bin/env bash

: << !
Name: 2-install-packages
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2020-04-27 13:32:42

Description: 批量安装packages

Attentions:
- 需要先添加archlinuxcn源

Depends:
- pacman
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program nversion
readonly major_version=0.0.4
readonly minor_version=20230214
readonly rel_version=1

#------------------------- Exit Code Variable
readonly err_file=1      # 文件/路径类错误
readonly err_ctrl_c=130  # 接收到INT(Ctrl+C)指令
readonly err_unknown=255 # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于批量安装Packages"
# path variable
list_filename="$HOME/Documents/MyRepos/System-Conf/system-info/pacman-pkglist"

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\033[32m$name\033[0m\033[1m$desc\033[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name OPTIONS"
  echo -e ""
  echo -e "Options:"
  echo -e "     -h, --help            显示帮助信息"
  echo -e "     -v, --version         显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\033[1m$name\033[0m version (\033[1m$major_version-$minor_version.$rel_version\033[0m)"
}

#------------------------- Feature Function
function exitProgram() {
  echo -e "Ctrl+C is captured, exit"
  exit $err_ctrl_c
}

function main() {
  while true; do
    trap 'exitProgram' INT # 捕获到INT(Ctrl+C)信号，程序退出

    if [[ -s $list_filename ]]; then
      packages=$(cat "$list_filename")
      for package in $packages; do
        pacman -S "$package"
        echo -e "\n"
      done
    else
      exit $err_file
    fi
  done
}

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "hv" --longoptions "help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  main
else
  while true; do
    case $1 in
      -h | --help)
        helpInfo
        shift 1
        ;;
      -v | --version)
        versionInfo
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        helpInfo
        exit $err_unknown
        ;;
    esac
  done
fi
