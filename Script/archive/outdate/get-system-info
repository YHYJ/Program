#!/usr/bin/env bash

: << !
Name: get-system-info
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2021-11-17 08:49:08

Description: 查询系统信息

Attentions:
-

Depends:
-
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program version
readonly major_version=0.2.3
readonly minor_version=20231013
readonly rel_version=1

#------------------------- Exit Code Variable
readonly err_unknown=255 # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于查询系统信息"

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\x1b[32m$name\x1b[0m\x1b[1m$desc\x1b[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name [OPTION]"
  echo -e ""
  echo -e "Options:"
  echo -e "     -b, --boot-time           查询最近开机时间"
  echo -e "     -k, --kernel-version      查询内核版本"
  echo -e "     -l, --system-load         查询系统负载"
  echo -e "     -p, --package-updateable  查询可用更新"
  echo -e "     -r, --run-time            查询系统运行时长"
  echo -e "     -s, --service-status      查询更新检测状态"
  echo -e "     -t, --time-spent          查询系统启动用时"
  echo -e "     -u, --user-online         查询当前登录用户"
  echo -e ""
  echo -e "     -h, --help                显示帮助信息"
  echo -e "     -v, --version             显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\x1b[1m$name\x1b[0m version (\x1b[1m$major_version-$minor_version.$rel_version\x1b[0m)"
}

#------------------------- Feature Function

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "bklprstuhv" --longoptions "boot-time,kernel-version,system-load,package-updateable,run-time,service-status,time-spent,user-online,help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  helpInfo
else
  while true; do
    case $1 in
      -b | --boot-time)
        uptime -s
        shift 1
        ;;
      -k | --kernel-version)
        uname -sr
        shift 1
        ;;
      -l | --system-load)
        uptime | awk -F ': ' '{print $NF}'
        shift 1
        ;;
      -p | --package-updateable)
        if [ -f /tmp/system-checkupdates.log ]; then
          cat /tmp/system-checkupdates.log
        fi
        shift 1
        ;;
      -r | --run-time)
        uptime --pretty | sed 's/up //' | sed 's/\ years\?,/y/' | sed 's/\ weeks\?,/w/' | sed 's/\ days\?,/d/' | sed 's/\ hours\?,\?/h/' | sed 's/\ minutes\?/m/'
        shift 1
        ;;
      -s | --service-status)
        systemctl is-active system-checkupdates
        shift 1
        ;;
      -t | --time-spent)
        systemd-analyze | head -1 | awk '{print $NF}'
        shift 1
        ;;
      -u | --user-online)
        who -q | tr '\n' ' ' | awk -F '%' '{print $NF}'
        shift 1
        ;;
      -h | --help)
        helpInfo
        shift 1
        ;;
      -v | --version)
        versionInfo
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        helpInfo
        exit $err_unknown
        ;;
    esac
  done
fi
