#!/usr/bin/env bash

: << !
Name: install-AUR-Helper
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2020-04-27 11:07:04

Description: 安装AUR-Helper

Attentions:
- 默认安装yay
- 简单的方法是添加archlinuxcn源直接用pacman安装

Depends:
- wget
- tar
- pacman
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program nversion
readonly major_version=0.0.4
readonly minor_version=20230214
readonly rel_version=1

#------------------------- Exit Code Variable
readonly err_file=1         # 文件/路径类错误
readonly err_permission=110 # 权限错误
readonly err_unknown=255    # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于安装AUR Healper"
# path variable
readonly helper_name="yay"
readonly helper_path="/usr/bin/$helper_name"

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\033[32m$name\033[0m\033[1m$desc\033[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name [OPTIONS]"
  echo -e ""
  echo -e "Options:"
  echo -e "     -h, --help            显示帮助信息"
  echo -e "     -v, --version         显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\033[1m$name\033[0m version (\033[1m$major_version-$minor_version.$rel_version\033[0m)"
}

#------------------------- Feature Function
function askQuestion() {
  while true; do
    read -e -r -p "$1"
    REPLY=${REPLY:-N}
    echo
    if [[ "$REPLY" =~ ^[Yy] ]]; then
      return 0
    elif [[ "$REPLY" =~ ^[Nn] ]]; then
      return 1
    else
      echo -e "应输入 Y/y 或 N/n\n"
    fi
  done
}

function checkUser() {
  if [[ $USER == "$1" ]]; then
    echo -e "\n\033[31m[✘]\033[0m 当前用户是$1，拒绝执行！！！"
    exit $err_permission
  fi
}

function installPkg() {
  url="https://aur.archlinux.org/cgit/aur.git/snapshot/yay.tar.gz"
  down_dir="$HOME/Downloads/"
  cfile="${url##*/}"  # yay.tar.gz
  file="${cfile%%.*}" # yay(type:dir)

  if wget "$url" -O "$down_dir$cfile" &> /dev/null; then
    echo
    echo -e "\033[32m安装包下载成功\\[0m"
    cd "$down_dir" || exit $err_file
    if tar -xzvf "$cfile" &> /dev/null; then
      cd "$file" || exit $err_file
      if makepkg -rsi; then
        echo -e "\033[32m$helper_name安装成功\\[0m"
      fi
    else
      echo -e "\033[31m解压失败\\[0m"
    fi
  else
    echo -e "\033[31m网络故障，下载失败\\[0m"
  fi
}

function main() {
  checkUser "root"

  if [[ -x "$helper_path" ]]; then
    echo -e "$helper_name 已存在"
  else
    if askQuestion "是否确认安装$helper_name [y/N]: "; then
      installPkg
    else
      echo
      echo -e "退出"
      echo
    fi
  fi
}

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "hv" --longoptions "help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  main
else
  while true; do
    case $1 in
      -h | --help)
        helpInfo
        shift 1
        ;;
      -v | --version)
        versionInfo
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        helpInfo
        exit $err_unknown
        ;;
    esac
  done
fi
