#!/usr/bin/env bash

: << !
Name: configure-git
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2020-04-27 10:43:32

Description: 配置git

Attentions:
- 根据系统的hostname自动配置user.name
- 执行完成后自动将公钥复制到剪贴板

Depends:
- git
- openssh
- xsel
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program nversion
readonly major_version=0.0.4
readonly minor_version=20230214
readonly rel_version=1

#------------------------- Exit Code Variable
readonly err_permission=110 # 权限错误
readonly err_unknown=255    # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于配置Git"

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\033[32m$name\033[0m\033[1m$desc\033[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name [OPTIONS]"
  echo -e ""
  echo -e "Options:"
  echo -e "     -h, --help            显示帮助信息"
  echo -e "     -v, --version         显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\033[1m$name\033[0m version (\033[1m$major_version-$minor_version.$rel_version\033[0m)"
}

#------------------------- Feature Function
function getEditor() {
  if [[ -z $EDITOR ]]; then
    # $EDITOR变量为空
    if command -v nvim &> /dev/null; then
      editor="nvim"
      merge_tool="vimdiff"
    elif command -v vim &> /dev/null; then
      editor="vim"
      merge_tool="vimdiff"
    else
      editor="vi"
      merge_tool="diff"
    fi
  elif [[ $EDITOR =~ "vim" ]]; then
    editor=$EDITOR
    merge_tool="vimdiff"
  else
    editor=$EDITOR
    merge_tool="diff"
  fi
}

function checkUser() {
  if [[ $USER == "$1" ]]; then
    echo -e "\n\033[31m[✘]\033[0m 当前用户是$1，拒绝执行！！！"
    exit $err_permission
  fi
}

function main() {
  checkUser "root"
  getEditor

  git config --global user.name "$(hostname)"
  git config --global user.email "yj1516268@outlook.com"
  git config --global core.editor "$editor"
  git config --global core.autocrlf input
  git config --global merge.tool "$merge_tool"
  git config --global color.ui true
  git config --global pull.rebase false
  echo -e "git配置完成\n\n"

  ssh-keygen -t rsa -C "yj1516268@outlook.com"
  xsel < "$HOME/.ssh/id_rsa.pub" --clipboard --input
  echo -e "公钥已复制到粘贴板，请到https://github.com/settings/keys进行设置\n\n"
}

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
ARGS=$(getopt --options "hv" --longoptions "help,version" -n "$name" -- "$@")
eval set -- "$ARGS"

if [[ ${#@} -lt 2 ]]; then
  main
else
  while true; do
    case $1 in
      -h | --help)
        helpInfo
        shift 1
        ;;
      -v | --version)
        versionInfo
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        helpInfo
        exit $err_unknown
        ;;
    esac
  done
fi
