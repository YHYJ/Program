#!/usr/bin/env bash

: << !
Name: configure-dtags
Author: YJ
Email: yj1516268@outlook.com
Created Time: 2020-04-27 10:38:44

Description: 配置dtags

Attentions:
-

Depends:
- dtags
!

####################################################################
#+++++++++++++++++++++++++ Define Variable ++++++++++++++++++++++++#
####################################################################
#------------------------- Program Variable
# program name
name=$(basename "$0")
readonly name
# program nversion
readonly major_version=0.0.3
readonly minor_version=20230213
readonly rel_version=1

#------------------------- Exit Code Variable
readonly normal=0           # 一切正常
readonly err_file=1         # 文件/路径类错误
readonly err_permission=110 # 权限错误
readonly err_unknown=255    # 未知错误

#------------------------- Parameter Variable
# description variable
readonly desc="用于配置dtags"
# path variable
readonly dtags_path="/usr/bin/dtags-activate"
readonly myrepos="$HOME/Documents/MyRepos"

####################################################################
#+++++++++++++++++++++++++ Define Function ++++++++++++++++++++++++#
####################################################################
#------------------------- Info Function
function helpInfo() {
  echo -e ""
  echo -e "\e[32m$name\e[0m\e[1m$desc\e[0m"
  echo -e "--------------------------------------------------"
  echo -e "Usage:"
  echo -e ""
  echo -e "     $name OPTIONS"
  echo -e ""
  echo -e "Options:"
  echo -e "     -h, --help            显示帮助信息"
  echo -e "     -v, --version         显示版本信息"
}

function versionInfo() {
  echo -e ""
  echo -e "\e[1m$name\e[0m version (\e[1m$major_version-$minor_version.$rel_version\e[0m)"
}

#------------------------- Feature Function
function askQuestion() {
  while true; do
    read -e -r -p "$1"
    REPLY=${REPLY:-N}
    echo
    if [[ "$REPLY" =~ ^[Yy] ]]; then
      return 0
    elif [[ "$REPLY" =~ ^[Nn] ]]; then
      return 1
    else
      echo -e "应输入 Y/y 或 N/n\n"
    fi
  done
}

function checkUser() {
  if [[ $USER == "$1" ]]; then
    echo -e "\n\\e[31m[✘]\\e[0m 当前用户是$1，拒绝执行！！！"
    exit $err_permission
  fi
}

function addTags() {
  num=0
  if [[ -d "$myrepos" ]]; then
    for file in "$myrepos"/*; do
      if [[ -d "$file" ]]; then
        if [[ -d "$file"/.git ]]; then
          dtags-t "$file" "repo" && eval "$(dtags-refresh zsh)"
          ((num++))
        else
          echo -e "$file不是一个repo，忽略.\n"
        fi
      elif [[ -f "$file" ]]; then
        echo -e "$file是文本文件，忽略.\n"
      else
        echo -e "$file文件类型未知，忽略.\n"
      fi
    done
  else
    echo -e "\\e[31m$myrepos目录不存在\\e[0m\n"
    exit $err_file
  fi

  echo -e "\\e[34m已创建/存在共\\e[0m\\e[32m$num\\e[0m\\e[34m个dtags.\\e[0m\n"
  exit $normal
}

function main() {
  checkUser "root"

  if [[ -x "$dtags_path" ]]; then
    addTags "repo"
  else
    if askQuestion "是否确认安装dtags [y/N]: "; then
      echo
      installPkg
    else
      echo -e "退出\n"
    fi
  fi
}

####################################################################
#++++++++++++++++++++++++++++++ Main ++++++++++++++++++++++++++++++#
####################################################################
if [[ ${#@} -lt 1 ]]; then
  main
else
  case $1 in
    -h | --help)
      helpInfo
      exit $normal
      ;;
    -v | --version)
      versionInfo
      exit $normal
      ;;
    *)
      helpInfo
      exit $err_unknown
      ;;
  esac
fi
